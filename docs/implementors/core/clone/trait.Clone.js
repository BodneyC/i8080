(function() {var implementors = {};
implementors["i8080"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"i8080/asm/assemble/struct.Macro.html\" title=\"struct i8080::asm::assemble::Macro\">Macro</a>","synthetic":false,"types":["i8080::asm::assemble::Macro"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"i8080/asm/expressions/lexer/struct.ExprFlags.html\" title=\"struct i8080::asm::expressions::lexer::ExprFlags\">ExprFlags</a>","synthetic":false,"types":["i8080::asm::expressions::lexer::ExprFlags"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"i8080/asm/expressions/token/enum.Token.html\" title=\"enum i8080::asm::expressions::token::Token\">Token</a>","synthetic":false,"types":["i8080::asm::expressions::token::Token"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"i8080/asm/label/struct.Label.html\" title=\"struct i8080::asm::label::Label\">Label</a>","synthetic":false,"types":["i8080::asm::label::Label"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"i8080/asm/tokenizer/struct.LineMeta.html\" title=\"struct i8080::asm::tokenizer::LineMeta\">LineMeta</a>","synthetic":false,"types":["i8080::asm::tokenizer::LineMeta"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.57.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"i8080/meta/struct.OpMeta.html\" title=\"struct i8080::meta::OpMeta\">OpMeta</a>","synthetic":false,"types":["i8080::meta::OpMeta"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()