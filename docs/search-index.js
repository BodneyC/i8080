var searchIndex = JSON.parse('{\
"i8080":{"doc":"An Intel 8080 emulator and assembler","tn":["asm","cli","ecodes","main","meta","sys","util","assemble","disassemble","errors","expressions","find_op_code","label","ok_or_return","run_assembler","run_disassmbler","tokenizer","Assembler","Macro","args","assemble","borrow","borrow","borrow_mut","borrow_mut","bytes","clone","clone_into","default","erroring_line","fmt","from","from","gen_for_instruction","gen_for_line","gen_for_macro_at","gen_for_macro_call","gen_macros","generate_prog","get_reg_defs","into","into","labels","lines","lines","load_file","macros","new","new","parse_at","print_err_msg","prog_width","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","uses_pc","vzip","vzip","width","width_of_data_storage","write","disassemble_instruction","disassemble_vec","AssemblerError","CodeGen","CodeGenError","DefineInMacro","DisassembleError","ExpressionError","FileRead","IfAndMacroMix","InvalidArgument","InvalidLabel","InvalidRegister","LabelAlreadyDefined","MacroCallInMacroUsesSp","MacroUseBeforeCreation","MovAsHalt","NestedIf","NestedMacro","NoArgsForVariadic","NoEndIf","NoEndMacro","NoInstructionFound","NoRemainingBytes","NoSuchInstruction","NotEnoughBytes","NotInIf","NotInMacro","OpParseError","OperationRequiresLabel","OrigInMacro","Parser","ParserError","ParserError","RecursiveMacro","UnexpectedLength","UnknownDefine","UnknownError","UnknownRegister","UnterminatedString","WrongNumberOfArgs","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","provide","provide","provide","provide","provide","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","errors","lexer","parser","rpn","shunting_yard","token","CalculationError","ExpressionError","MetaUsedInCalculation","NotANumber","NumberParseError","UnknownEscape","UnknownIdentifier","UnknownUnary","UnmatchedParens","UnmatchedQuote","UnprocessableChar","borrow","borrow_mut","fmt","fmt","from","into","provide","to_string","try_from","try_into","type_id","vzip","ExprFlags","Lexer","address","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","consume_identifier","consume_number","consume_string","eq","equivalent","fmt","from","from","functions","into","into","iter","lex","new","new","pc","psw","sp","string","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ExprOutput","parse_expression","parse_expression_u16","calculate","operate","transform","LEFT_ASSOC","LParen","MetaIdentifier","Number","Operator","RIGHT_ASSOC","RParen","String","Token","Unary","borrow","borrow_mut","clone","clone_into","eq","fmt","from","into","to_owned","try_from","try_into","type_id","vzip","from_args","from_args_and_sp_psw","with_all_regs","with_b_or_d","with_word_regs","Label","borrow","borrow_mut","clone","clone_into","fmt","from","into","is_addr","is_eq","is_set","new_addr","new_equ","new_set","to_owned","try_from","try_into","type_id","value","vzip","LineMeta","address","args_list","borrow","borrow_mut","clone","clone_into","comment","default","eq","equivalent","erroring","fmt","from","from_raw","inst","into","label","label_only","label_only","line_no","op_code","raw_line","to_owned","tokenize","try_from","try_into","type_id","uses_pc","vzip","width","Assemble","AssembleArgs","Cli","Commands","Disassemble","DisassembleArgs","Run","RunArgs","assemble","augment_args","augment_args","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","command","emulate_clock_speed","file","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","has_subcommand","hlt","input","input","interactive","into","into","into","into","into","into_app","into_app_for_update","load_at","load_at","no_console","output","output","randomize","register_definitions","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","vzip","vzip","vzip","vzip","vzip","E_ASSEMBLER","E_DISASSEMBLER","E_IO_ERROR","E_SUCCESS","I8080_OP_META","OpMeta","argb","argw","asm_arg_count","borrow","borrow_mut","clone","clone_into","cycles","default","define","eq","equivalent","fmt","from","into","labelled","load_op_meta","new_argb","new_argw","new_define","new_labelled","new_no_args","op","to_owned","try_from","try_into","type_id","vzip","width","PROMPT_HELP","continue_on_err","device","flags","i8080","memory","parse_number","prompt_cycle","registers","run_interactive","run_system","RxDevice","TxDevice","borrow","borrow","borrow_mut","borrow_mut","console_device","eot_byte","from","from","into","into","new","new","rx","try_from","try_from","try_into","try_into","tx","type_id","type_id","vzip","vzip","ConsoleDevice","borrow","borrow_mut","echo","from","into","new","run","run_echo","run_no_echo","rx","special_chars","try_from","try_into","type_id","vzip","BEL","BS","CR","EOT","ETB","LF","NUL","Flags","aux_carry","borrow","borrow_mut","carry","default","fmt","from","from_byte","into","new","parity","parity","sign","to_byte","try_from","try_into","type_id","vzip","zero","zero_sign_parity","CYCLES_PER_STEP","FREQUENCY","I8080","STEP_MS","add","ana","borrow","borrow_mut","call","cmp","current_state","cycle","cycles","daa","dad","dcr","describe_system","dev_in","dev_out","execute","execute","flags","fmt_instruction","from","from_time","get_memory_slice","get_pc","halt","halted","inr","interactive","interrupt_flip_flop","interrupt_op_code","into","issue_interrupt","jmp","load","log_components","log_cycle","memory","new","ora","pc_argb","pc_argw","pc_inst","pop","pop_psw","push","push_psw","ral","randomize","rar","registers","ret","rlc","rrc","run","rx_devices","sleep_for_hz","sub","try_from","try_into","tx_devices","type_id","vzip","xchg","xra","xthl","MAX_MEM","Memory","borrow","borrow_mut","fmt","from","get_slice","into","load","mem","new","randomize","read_byte","read_word_big_endian","read_word_little_endian","try_from","try_into","type_id","vzip","write_byte","write_word_big_endian","write_word_little_endian","Registers","a","b","borrow","borrow_mut","c","d","default","e","fmt","from","get_bc","get_de","get_hl","h","into","l","new","pc","randomize","set_bc","set_de","set_hl","sp","try_from","try_into","type_id","vzip","char_width_one","is_bit_set","read_file_to_vec_u8","read_lines","u16_to_vec_u8","vec_u8_to_u16"],"q":["i8080","","","","","","","i8080::asm","","","","","","","","","","i8080::asm::assemble","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","i8080::asm::disassemble","","i8080::asm::errors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","i8080::asm::expressions","","","","","","i8080::asm::expressions::errors","","","","","","","","","","","","","","","","","","","","","","","i8080::asm::expressions::lexer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","i8080::asm::expressions::parser","","","i8080::asm::expressions::rpn","","i8080::asm::expressions::shunting_yard","i8080::asm::expressions::token","","","","","","","","","","","","","","","","","","","","","","","i8080::asm::find_op_code","","","","","i8080::asm::label","","","","","","","","","","","","","","","","","","","","i8080::asm::tokenizer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","i8080::cli","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","i8080::ecodes","","","","i8080::meta","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","i8080::sys","","","","","","","","","","","i8080::sys::device","","","","","","","","","","","","","","","","","","","","","","","","i8080::sys::device::console_device","","","","","","","","","","","","","","","","i8080::sys::device::console_device::special_chars","","","","","","","i8080::sys::flags","","","","","","","","","","","","","","","","","","","","","i8080::sys::i8080","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","i8080::sys::memory","","","","","","","","","","","","","","","","","","","","","","i8080::sys::registers","","","","","","","","","","","","","","","","","","","","","","","","","","","","i8080::util","","","","",""],"d":["Contains the assembler and disassembler","Cli argument structures","Exit codes","","Metadata for 8080 instructions","System and emulator","","8080 assembler","8080 disassembler","Various error which may be returned by the assembler","Expression-parser","Find the operation code for a given string","Label container specifying the type of value/instruction …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Fill the macros with useful bytes","Because of the ORG instruction, we preallocate the vec so …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Holy shit, this does a lot. And might be the single worst …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The ParserError should only be logged to the user","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Simplistic IO device","","","","","","","","","","","","","","","Console printing device for the emulator","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Adds a value to the A register","Performs a logical AND between a given value and A","","","","Comapres a value against the A register","","","","Decimal Adjust Accumulator, represents the 8-bit value as …","Double add, adds a word (a double) to HL","Decrement a value, setting flags","Example of the output as the format string is not …","Read a byte from the specified in-device and writes it to A","Writes a byte (usually A) to the specified out-device","","","","","Returns the argument unchanged.","","","","Halts the CPU at the end of the current cycle (if using …","","Increment a value, setting flags","","","","Calls <code>U::from(self)</code>.","","Continues execution at a given address based on a condition","","","","","","Performs a logical OR between a given value and A","Get the byte argument at PC+1","Get the word argument at PC+1","Get the instruction at PC","Pop a value from the stack","Push A and the flags register to the stack","Push a value onto the stack","Push A and the flags register to the stack","Rotate A left once, with carry","","Rotate A right once, with carry","","","Rotate A left once, no carry","Rotate A right once, no carry","","","","Subtracts a value from the A register","","","","","","Exchange the value of HL with DE","Performs a logical XOR between a given value and A","Exchange the value pointed to by the stack pointer with …","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,9,4,9,9,9,9,9,4,9,4,9,4,4,4,4,4,4,0,4,9,4,4,9,4,4,4,9,4,4,4,9,4,9,4,9,4,9,9,4,9,9,4,4,0,0,0,7,0,19,0,19,7,19,19,19,24,19,19,19,24,19,19,19,19,19,19,23,24,23,19,19,0,19,19,7,0,14,19,14,19,23,24,19,19,7,19,14,24,23,7,19,14,24,23,7,7,19,19,14,14,24,24,23,23,7,7,7,19,19,14,14,14,24,23,7,19,14,24,23,7,19,14,24,23,7,19,14,24,23,7,19,14,24,23,7,19,14,24,23,7,19,14,24,23,7,19,14,24,23,0,0,0,0,0,0,25,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,0,28,28,27,28,27,27,27,28,28,28,27,27,27,28,27,0,28,27,28,28,28,27,27,27,27,27,27,28,27,28,27,28,27,28,27,0,0,0,0,0,0,0,29,29,29,29,0,29,29,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,0,0,0,0,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,12,12,12,12,12,12,36,0,0,0,36,0,36,0,37,35,37,1,3,35,37,1,3,36,36,35,36,37,1,3,35,36,37,1,3,35,37,37,35,36,37,1,3,35,36,37,1,3,35,36,37,1,3,36,1,1,3,37,35,36,37,1,3,35,35,37,1,37,1,3,37,1,35,36,37,1,3,35,36,37,1,3,35,36,37,1,3,35,36,37,1,3,35,36,37,1,3,0,0,0,0,0,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,0,40,40,40,40,40,40,40,40,40,40,40,40,0,0,0,0,0,0,0,0,0,0,0,0,0,44,46,44,46,0,44,44,46,44,46,44,46,46,44,46,44,46,44,44,46,44,46,0,47,47,47,47,47,47,47,47,47,47,0,47,47,47,47,0,0,0,0,0,0,0,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,0,0,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,0,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,0,0,0,0,0,0],"f":[0,0,0,[[]],0,0,0,0,0,0,0,0,0,0,[1,2],[3,2],0,0,0,0,[4,[[8,[[6,[5]],7]]]],[[]],[[]],[[]],[[]],0,[9,9],[[]],[[],9],0,[[9,10],11],[[]],[[]],[[4,12,13],[[8,[14]]]],[[4,12,13,15],[[8,[14]]]],[[4,9,13],[[8,[[6,[5]],14]]]],[[4,12,13,15],[[8,[14]]]],[4,[[8,[14]]]],[4,[[8,[[6,[5]],14]]]],[[],[[18,[16,17]]]],[[]],[[]],0,0,0,[4,[[8,[[6,[12]],7]]]],0,[1,4],[[],9],[[4,[6,[12]],13],[[8,[19]]]],[[4,7]],0,[[]],[[],8],[[],8],[[],8],[[],8],[[],20],[[],20],0,[[]],[[]],0,[[4,16],[[8,[21,19]]]],[[4,[6,[5]]],[[8,[22]]]],[21,[[8,[23]]]],[[],[[8,[[6,[16]],23]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[7,10],11],[[7,10],11],[[19,10],11],[[19,10],11],[[14,10],11],[[14,10],11],[[24,10],11],[[24,10],11],[[23,10],11],[[23,10],11],[14,7],[19,7],[[]],[[]],[25,19],[[]],[25,14],[19,14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[26],[26],[26],[26],[26],[[],16],[[],16],[[],16],[[],16],[[],16],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],20],[[],20],[[],20],[[],20],[[],20],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[25,10],11],[[25,10],11],[[]],[[]],[26],[[],16],[[],8],[[],8],[[],20],[[]],0,0,0,[[]],[[]],[[]],[[]],[27,27],[[]],[28,16],[28],[28,[[8,[16,25]]]],[[27,27],15],[[],15],[[27,10],11],[[]],[[]],[16,[[30,[29]]]],[[]],[[]],0,[[28,31,13,18],[[8,[25]]]],[[],28],[[],27],0,0,0,0,[[]],[[],8],[[],8],[[],8],[[],8],[[],20],[[],20],[[]],[[]],0,[[[32,[16]],13,18],[[8,[25]]]],[[[32,[16]],13,18],[[8,[25]]]],[[],[[8,[13,25]]]],[[33,13,13],13],[[[6,[29]]],[[8,[[6,[29]],25]]]],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[29,29],[[]],[[29,29],15],[[29,10],11],[[]],[[]],[[]],[[],8],[[],8],[[],20],[[]],[[31,13,13],[[8,[21,24]]]],[[31,13,13,15,15],[[8,[21,24]]]],[[13,13,13,15],[[8,[21,24]]]],[[13,13,15],[[8,[21,24]]]],[[13,13,15],[[8,[21,24]]]],0,[[]],[[]],[17,17],[[]],[[17,10],11],[[]],[[]],0,0,0,[[[30,[13]]],17],[[[30,[13]]],17],[[[30,[13]]],17],[[]],[[],8],[[],8],[[],20],0,[[]],0,0,0,[[]],[[]],[12,12],[[]],0,[[],12],[[12,12],15],[[],15],[12,12],[[12,10],11],[[]],[[21,16],12],0,[[]],0,[[[30,[16]],[30,[16]],16],12],0,0,0,0,[[]],[31,[[8,[[30,[12]],19]]]],[[],8],[[],8],[[],20],0,[[]],0,0,0,0,0,0,0,0,0,0,[34,34],[34,34],[34,34],[34,34],[34,34],[34,34],[34,34],[34,34],[34,34],[34,34],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[35,10],11],[[36,10],11],[[37,10],11],[[1,10],11],[[3,10],11],[[]],[[]],[[]],[[]],[[]],[38,[[8,[35,39]]]],[38,[[8,[36,39]]]],[38,[[8,[37,39]]]],[38,[[8,[1,39]]]],[38,[[8,[3,39]]]],[31,15],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[],34],[[],34],0,0,0,0,0,0,0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],20],[[],20],[[],20],[[],20],[[],20],[[35,38],[[8,[39]]]],[[36,38],[[8,[39]]]],[[37,38],[[8,[39]]]],[[1,38],[[8,[39]]]],[[3,38],[[8,[39]]]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[40,40],[[]],0,[[],40],0,[[40,40],15],[[],15],[[40,10],11],[[]],[[]],0,[[]],[[31,21,5],40],[[31,21,5],40],[[31,21],40],[[31,21],40],[[31,21,5],40],0,[[]],[[],8],[[],8],[[],20],[[]],[40,21],0,0,0,0,0,0,[31,[[8,[13,41]]]],[42,15],0,[42],[37,2],0,0,[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[[43,[5]],5],44],[[[45,[5]]],46],0,[[],8],[[],8],[[],8],[[],8],0,[[],20],[[],20],[[]],[[]],0,[[]],[[]],0,[[]],[[]],[[[45,[5]],15],47],[47,[[6,[5]]]],[47,[[6,[5]]]],[47,[[6,[5]]]],0,0,[[],8],[[],8],[[],20],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],0,[[],48],[[48,10],11],[[]],[[48,5]],[[]],[[],48],[5,15],0,0,[48,5],[[],8],[[],8],[[],20],[[]],0,[[48,5]],0,0,0,0,[[42,5,15]],[[42,5]],[[]],[[]],[[42,13,[30,[15]]]],[[42,5]],0,[42],0,[42],[[42,13]],[[42,5],5],[42,16],[[42,21],5],[[42,21,5]],0,[[42,5]],0,[[42,5,40,13,15],16],[[]],0,[[42,13,13],[[6,[5]]]],[42,13],[42],0,[[42,5],5],0,0,0,[[]],[[42,5]],[[42,13,15]],[[42,13,[6,[5]]],21],[42],[42],0,[[[6,[46]],[6,[44]]],42],[[42,5]],[42,5],[42,13],[42,5],[42,13],[42],[[42,13]],[42],[42],[42],[42],0,[[42,[30,[15]]]],[42],[42],[[42,15]],0,[42],[[42,5,15]],[[],8],[[],8],0,[[],20],[[]],[42],[[42,5]],[42],0,0,[[]],[[]],[[49,10],11],[[]],[[49,13,13],[[6,[5]]]],[[]],[[49,13,[6,[5]]],21],0,[[],49],[49],[[49,13],5],[[49,13],13],[[49,13],13],[[],8],[[],8],[[],20],[[]],[[49,13,5]],[[49,13,13]],[[49,13,13]],0,0,0,[[]],[[]],0,0,[[],50],0,[[50,10],11],[[]],[50,13],[50,13],[50,13],0,[[]],0,[[],50],0,[50],[[50,13]],[[50,13]],[[50,13]],0,[[],8],[[],8],[[],20],[[]],[5,33],[[5,5],15],[[[52,[51]]],[[8,[[6,[5]],22]]]],[[[52,[51]]],[[56,[[55,[[54,[53]]]]]]]],[13,[[6,[5]]]],[[],13]],"p":[[3,"AssembleArgs"],[15,"i32"],[3,"DisassembleArgs"],[3,"Assembler"],[15,"u8"],[3,"Vec"],[4,"AssemblerError"],[4,"Result"],[3,"Macro"],[3,"Formatter"],[6,"Result"],[3,"LineMeta"],[15,"u16"],[4,"CodeGenError"],[15,"bool"],[3,"String"],[3,"Label"],[3,"HashMap"],[4,"ParserError"],[3,"TypeId"],[15,"usize"],[3,"Error"],[4,"DisassembleError"],[4,"OpParseError"],[4,"ExpressionError"],[3,"Demand"],[3,"ExprFlags"],[3,"Lexer"],[4,"Token"],[4,"Option"],[15,"str"],[8,"Into"],[15,"char"],[6,"Command"],[3,"Cli"],[4,"Commands"],[3,"RunArgs"],[3,"ArgMatches"],[3,"Error"],[3,"OpMeta"],[3,"ParseIntError"],[3,"I8080"],[3,"Sender"],[3,"TxDevice"],[3,"Receiver"],[3,"RxDevice"],[3,"ConsoleDevice"],[3,"Flags"],[3,"Memory"],[3,"Registers"],[3,"Path"],[8,"AsRef"],[3,"File"],[3,"BufReader"],[3,"Lines"],[6,"Result"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
